@page "/newAsset"

@using Investing.WebApp.Components
@using System.Linq;
@inject IDialogService Dialog


<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Cadastro de Ativos</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="OpenDialog" />
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable Items="@assets" Bordered="true" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Primary">
                            <HeaderContent>
                                <MudTh>Id</MudTh>
                                <MudTh>Ticker</MudTh>
                                <MudTh>Nome</MudTh>
                                <MudTh>Classe</MudTh>
                                <MudTh>Setor</MudTh>
                                <MudTh>Ações</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Nr">@context.Id</MudTd>
                                <MudTd DataLabel="Nr">@context.Ticker</MudTd>
                                <MudTd DataLabel="Name">@context.Name</MudTd>
                                <MudTd DataLabel="Classe">@context.Class</MudTd>
                                <MudTd DataLabel="Setor">@context.Sector</MudTd>
                                <MudTd DataLabel="Ações">
                                    <MudIconButton Icon="@Icons.Material.Filled.Remove" OnClick="() => RemoverItem(context.Id)" Color="Color.Error"></MudIconButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    public int Id { get; set; }
    public string Ticker { get; set; }
    public string Name { get; set; }
    public string Class { get; set; }
    public string Sector { get; set; }

    private List<NewAsset> assets = new List<NewAsset>();

    protected override async Task OnInitializedAsync()
    {
        assets = new List<NewAsset>(){
            new NewAsset(){ Id = 1, Ticker = "SANB4", Name = "Santander Brasil S.A", Class = "Ações", Sector = "Finanças" },
            new NewAsset(){ Id = 2, Ticker = "SAPR4", Name = "Cia de Saneamento do Paraná - SANEPAR", Class = "Ações", Sector = "Água e Sameamento" },
            new NewAsset(){ Id = 3, Ticker = "KLBN4", Name = "Klabin S.A", Class = "Ações", Sector = "Comodities" },
            new NewAsset(){ Id = 4, Ticker = "TASA4", Name = "Taurus Armas S.A", Class = "Ações", Sector = "Industria" }
        };
    }

    private async Task RemoverItem(int id)
    {
        var options = new DialogOptions
            {
                FullWidth = true,
                MaxWidth = MaxWidth.ExtraSmall,
                CloseButton = false,
                DisableBackdropClick = true,
                NoHeader = false,
                Position = DialogPosition.TopCenter,
                CloseOnEscapeKey = false
            };

        var dialogResult = Dialog.Show<ConfirmationDialog>("Confirmação", options);
        var result = await dialogResult.Result;
        bool.TryParse(result.Data.ToString(), out bool confirmado);
        if (!result.Cancelled && confirmado)
            RemoveItem(id);

    }

    private void RemoveItem(int id)
    {
        var item = assets.Where(i => i.Id == id).FirstOrDefault();
        if (item != null)
            assets.Remove(item);
    }

    private void OpenDialog()
    {
        var options = new DialogOptions
            {
                FullWidth = true,
                MaxWidth = MaxWidth.Small,
                CloseButton = true,
                DisableBackdropClick = true,
                NoHeader = false,
                Position = DialogPosition.Center,
                CloseOnEscapeKey = true
            };

        Dialog.Show<NewAssetDialog>("Novo Ativo", options);
    }
}
