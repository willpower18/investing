@page "/sectors"
@using Investing.WebApp.Components
@using System.Linq;
@inject IDialogService Dialog

<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Setores</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="OpenDialog" />
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable Items="@sectors" Bordered="true" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Primary">
                            <HeaderContent>
                                <MudTh>Id</MudTh>
                                <MudTh>Nome</MudTh>
                                <MudTh>Classe de Ativos</MudTh>
                                <MudTh>Ações</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Nr">@context.Id</MudTd>
                                <MudTd DataLabel="Name">@context.Name</MudTd>
                                <MudTd DataLabel="Name">@context.AssetClass</MudTd>
                                <MudTd DataLabel="Ações">
                                    <MudIconButton Icon="@Icons.Material.Filled.Remove" OnClick="() => RemoverItem(context.Id)" Color="Color.Error"></MudIconButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>

@code {

    public int Id { get; set; }
    public string Name { get; set; }
    public string AssetClass { get; set; }

    private List<Sectors> sectors = new List<Sectors>();

    protected override async Task OnInitializedAsync()
    {
        sectors = new List<Sectors>(){
            new Sectors(){ Id = 1, Name = "Comodities", AssetClass = "Ações Brasileiras" },
            new Sectors(){ Id = 2, Name = "Água e Saneamento", AssetClass = "Ações Brasileiras" },
            new Sectors(){ Id = 3, Name = "Energia", AssetClass = "Ações Brasileiras" },
            new Sectors(){ Id = 4, Name = "Financeiro", AssetClass = "Ações Brasileiras" },
            new Sectors(){ Id = 5, Name = "Fundos de Fundos", AssetClass = "Fundos Imobiliários" },
            new Sectors(){ Id = 6, Name = "Shoppings", AssetClass = "Fundos Imobiliários" },
            new Sectors(){ Id = 7, Name = "Papel", AssetClass = "Fundos Imobiliários" },
            new Sectors(){ Id = 8, Name = "Escritórios", AssetClass = "Fundos Imobiliários" },
            new Sectors(){ Id = 9, Name = "Logística", AssetClass = "Fundos Imobiliários" }
        };
    }

    private async Task RemoverItem(int id)
    {
        var options = new DialogOptions
            {
                FullWidth = true,
                MaxWidth = MaxWidth.ExtraSmall,
                CloseButton = false,
                DisableBackdropClick = true,
                NoHeader = false,
                Position = DialogPosition.TopCenter,
                CloseOnEscapeKey = false
            };

        var dialogResult = Dialog.Show<ConfirmationDialog>("Confirmação", options);
        var result = await dialogResult.Result;
        bool.TryParse(result.Data.ToString(), out bool confirmado);
        if (!result.Cancelled && confirmado)
            RemoveItem(id);

    }

    private void RemoveItem(int id)
    {
        var item = sectors.Where(i => i.Id == id).FirstOrDefault();
        if (item != null)
            sectors.Remove(item);
    }

    private void OpenDialog()
    {
        var options = new DialogOptions
            {
                FullWidth = true,
                MaxWidth = MaxWidth.Small,
                CloseButton = true,
                DisableBackdropClick = true,
                NoHeader = false,
                Position = DialogPosition.Center,
                CloseOnEscapeKey = true
            };

        Dialog.Show<NewSectorDialog>("Novo Setor", options);
    }
}
